import requests
import json
from datetime import datetime

# URL –±—ç–∫–µ–Ω–¥–∞
BASE_URL = "http://localhost:8000"

def test_backend():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –±—ç–∫–µ–Ω–¥–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Day Tracker Backend")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω.")
        return False
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–Ω—è
    print("\nüìù –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –¥–Ω—è...")
    daily_record = {
        "wake_up_time": datetime.now().isoformat(),
        "sleep_time": datetime.now().isoformat(),
        "sleep_quality": 8,
        "overall_mood": 7,
        "physical_wellness": 8,
        "mental_wellness": 7,
        "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/daily-records/",
            json=daily_record,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            print("‚úÖ –ó–∞–ø–∏—Å—å –¥–Ω—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            record_data = response.json()
            print(f"   ID –∑–∞–ø–∏—Å–∏: {record_data['id']}")
            return record_data['id']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: {e}")
        return None

def test_analytics():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    print("\nüìä –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    today = datetime.now().strftime("%Y-%m-%d")
    
    try:
        response = requests.get(f"{BASE_URL}/analytics/daily/{today}")
        if response.status_code == 200:
            print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å –ø–æ–ª—É—á–µ–Ω–∞")
            analytics = response.json()
            print(f"   –î–∞—Ç–∞: {analytics['date']}")
            print(f"   –ó–∞–ø–∏—Å–µ–π: {analytics['mood_entries_count']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏. –°—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Day Tracker Backend")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    record_id = test_backend()
    if record_id:
        test_analytics()
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print("http://localhost:8000/docs")
