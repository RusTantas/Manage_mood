#!/usr/bin/env python3
"""
–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from user_manager import UserManager
import pandas as pd
from datetime import datetime

class UserConsole:
    """–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    
    def __init__(self):
        self.user_manager = UserManager()
        self.current_user = None
    
    def main_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        while True:
            print("\n" + "="*50)
            print("üè† –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò")
            print("="*50)
            
            if self.current_user:
                print(f"üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.current_user}")
                print("1. üìä –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")
                print("2. ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
                print("3. üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                print("4. üîÑ –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
                print("5. üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
                print("0. ‚ùå –í—ã—Ö–æ–¥")
            else:
                print("1. üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                print("2. üîê –í—Ö–æ–¥")
                print("3. üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                print("4. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                print("0. ‚ùå –í—ã—Ö–æ–¥")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
            
            if self.current_user:
                if choice == "1":
                    self.show_user_data()
                elif choice == "2":
                    self.add_record()
                elif choice == "3":
                    self.show_user_stats()
                elif choice == "4":
                    self.create_test_data()
                elif choice == "5":
                    self.logout()
                elif choice == "0":
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            else:
                if choice == "1":
                    self.register_user()
                elif choice == "2":
                    self.login_user()
                elif choice == "3":
                    self.list_users()
                elif choice == "4":
                    self.delete_user()
                elif choice == "0":
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
    
    def register_user(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\n" + "="*30)
        print("üìù –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
        print("="*30)
        
        username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
        if not username:
            print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        
        password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
        if not password:
            print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        
        email = input("–í–≤–µ–¥–∏—Ç–µ email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
        
        result = self.user_manager.register_user(username, password, email)
        
        if result["success"]:
            print(f"‚úÖ {result['message']}")
            print(f"üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {result['user_id']}")
        else:
            print(f"‚ùå {result['message']}")
    
    def login_user(self):
        """–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\n" + "="*30)
        print("üîê –í–•–û–î –í –°–ò–°–¢–ï–ú–£")
        print("="*30)
        
        username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
        password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
        
        result = self.user_manager.authenticate_user(username, password)
        
        if result["success"]:
            print(f"‚úÖ {result['message']}")
            self.current_user = username
        else:
            print(f"‚ùå {result['message']}")
    
    def logout(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {self.current_user}!")
        self.current_user = None
    
    def show_user_data(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\n" + "="*30)
        print("üìä –ú–û–ò –î–ê–ù–ù–´–ï")
        print("="*30)
        
        df = self.user_manager.get_user_data(self.current_user)
        
        if df is None or df.empty:
            print("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π")
            return
        
        print(f"üìã –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(df)}")
        print("\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:")
        print(df.tail().to_string(index=False))
    
    def add_record(self):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å"""
        print("\n" + "="*30)
        print("‚ûï –î–û–ë–ê–í–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ò")
        print("="*30)
        
        record = {}
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∞
        while True:
            try:
                kol_sna = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∞ (—á–∞—Å—ã, 4-12): "))
                if 4 <= kol_sna <= 12:
                    record['kol_sna'] = kol_sna
                    break
                else:
                    print("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 4 –¥–æ 12 —á–∞—Å–æ–≤!")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
        
        # –ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –ø–æ—Å–ª–µ 00:00
        while True:
            try:
                kolichestvo_sna_0 = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –ø–æ—Å–ª–µ 00:00 (0-10): "))
                if 0 <= kolichestvo_sna_0 <= 10:
                    record['kolichestvo_sna_0'] = kolichestvo_sna_0
                    break
                else:
                    print("‚ùå –ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 10!")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
        
        # –ù–∞–ª–∏—á–∏–µ –∑–∞—Ä—è–¥–∫–∏
        while True:
            zarydka = input("–î–µ–ª–∞–ª–∏ –ª–∏ –∑–∞—Ä—è–¥–∫—É? (–¥–∞/–Ω–µ—Ç): ").lower()
            if zarydka in ['–¥–∞', '–¥', 'yes', 'y', '1']:
                record['nalichee_zarydki'] = 1
                break
            elif zarydka in ['–Ω–µ—Ç', '–Ω', 'no', 'n', '0']:
                record['nalichee_zarydki'] = 0
                break
            else:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'!")
        
        # –ó–∞–≤—Ç—Ä–∞–∫ –∫–∞–ª–æ—Ä–∏–π–Ω—ã–π
        while True:
            zavtrak = input("–ë—ã–ª –ª–∏ –∫–∞–ª–æ—Ä–∏–π–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫? (–¥–∞/–Ω–µ—Ç): ").lower()
            if zavtrak in ['–¥–∞', '–¥', 'yes', 'y', '1']:
                record['zavrrak_koloriy'] = 1
                break
            elif zavtrak in ['–Ω–µ—Ç', '–Ω', 'no', 'n', '0']:
                record['zavrrak_koloriy'] = 0
                break
            else:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'!")
        
        # –û–±–µ–¥ –∫–∞–ª–æ—Ä–∏–π–Ω—ã–π
        while True:
            obed = input("–ë—ã–ª –ª–∏ –∫–∞–ª–æ—Ä–∏–π–Ω—ã–π –æ–±–µ–¥? (–¥–∞/–Ω–µ—Ç): ").lower()
            if obed in ['–¥–∞', '–¥', 'yes', 'y', '1']:
                record['obed_koloriy'] = 1
                break
            elif obed in ['–Ω–µ—Ç', '–Ω', 'no', 'n', '0']:
                record['obed_koloriy'] = 0
                break
            else:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'!")
        
        # –ß—Ç–µ–Ω–∏–µ
        while True:
            chtenie = input("–ß–∏—Ç–∞–ª–∏ –ª–∏ —Å–µ–≥–æ–¥–Ω—è? (–¥–∞/–Ω–µ—Ç): ").lower()
            if chtenie in ['–¥–∞', '–¥', 'yes', 'y', '1']:
                record['chteniy'] = 1
                break
            elif chtenie in ['–Ω–µ—Ç', '–Ω', 'no', 'n', '0']:
                record['chteniy'] = 0
                break
            else:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'!")
        
        # –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–∞
        while True:
            rasporyadok = input("–°–æ—Å—Ç–∞–≤–ª—è–ª–∏ –ª–∏ —Ä–∞—Å–ø–æ—Ä—è–¥–æ–∫ –¥–Ω—è? (–¥–∞/–Ω–µ—Ç): ").lower()
            if rasporyadok in ['–¥–∞', '–¥', 'yes', 'y', '1']:
                record['sostavlenye_rasporydka'] = 1
                break
            elif rasporyadok in ['–Ω–µ—Ç', '–Ω', 'no', 'n', '0']:
                record['sostavlenye_rasporydka'] = 0
                break
            else:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'!")
        
        # –û—Ü–µ–Ω–∫–∞ –¥–Ω—è
        while True:
            try:
                ocenka = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –¥–Ω—è (1-10): "))
                if 1 <= ocenka <= 10:
                    record['ocenka_dny'] = ocenka
                    break
                else:
                    print("‚ùå –û—Ü–µ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10!")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É
        record['date'] = datetime.now().strftime('%Y-%m-%d')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
        success = self.user_manager.add_user_record(self.current_user, record)
        
        if success:
            print("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏!")
    
    def show_user_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\n" + "="*30)
        print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("="*30)
        
        stats = self.user_manager.get_user_stats(self.current_user)
        
        if "message" in stats:
            print(f"üì≠ {stats['message']}")
            return
        
        print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total_records']}")
        print(f"üò¥ –°—Ä–µ–¥–Ω–∏–π —Å–æ–Ω: {stats['average_sleep']:.1f} —á–∞—Å–æ–≤")
        print(f"‚≠ê –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –¥–Ω—è: {stats['average_rating']:.1f}")
        print(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {stats['last_record']}")
    
    def create_test_data(self):
        """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        print("\n" + "="*30)
        print("üîÑ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
        print("="*30)
        
        try:
            num_records = int(input("–°–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π —Å–æ–∑–¥–∞—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10): ") or "10")
        except ValueError:
            num_records = 10
        
        import numpy as np
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        for i in range(num_records):
            record = {
                'kol_sna': np.random.normal(7.5, 1.5).clip(4, 12),
                'kolichestvo_sna_0': np.random.randint(0, 11),
                'nalichee_zarydki': np.random.choice([0, 1]),
                'zavrrak_koloriy': np.random.choice([0, 1]),
                'obed_koloriy': np.random.choice([0, 1]),
                'chteniy': np.random.choice([0, 1]),
                'sostavlenye_rasporydka': np.random.choice([0, 1]),
                'ocenka_dny': np.random.randint(1, 11),
                'date': (datetime.now() - pd.Timedelta(days=i)).strftime('%Y-%m-%d')
            }
            
            success = self.user_manager.add_user_record(self.current_user, record)
            if success:
                print(f"‚úÖ –ó–∞–ø–∏—Å—å {i+1}/{num_records} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ {i+1}")
        
        print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {num_records} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π!")
    
    def list_users(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        print("\n" + "="*50)
        print("üë• –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("="*50)
        
        users = self.user_manager.list_users()
        
        if not users:
            print("üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç")
            return
        
        for i, user in enumerate(users, 1):
            print(f"{i}. üë§ {user['username']}")
            print(f"   üÜî ID: {user['user_id']}")
            print(f"   üìß Email: {user['email']}")
            print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {user['created_at'][:10]}")
            if user['last_login']:
                print(f"   üîÑ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {user['last_login'][:10]}")
            print()
    
    def delete_user(self):
        """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\n" + "="*30)
        print("üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
        print("="*30)
        
        username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
        
        if not username:
            print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        
        confirm = input(f"‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}'? (–¥–∞/–Ω–µ—Ç): ").lower()
        
        if confirm in ['–¥–∞', '–¥', 'yes', 'y']:
            success = self.user_manager.delete_user(username)
            if success:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —É–¥–∞–ª–µ–Ω!")
                if self.current_user == username:
                    self.current_user = None
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        else:
            print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

if __name__ == "__main__":
    console = UserConsole()
    console.main_menu()
